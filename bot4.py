import telebot
import settings
from telebot import types
import send
from loge import log_inf, log_err, log_deb
import photos_4

log_inf("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞")
bot = telebot.TeleBot(settings.TOKEN)

# –¢–µ–∫—Å—Ç–∏ –±–æ—Ç–∞
cance_text = "–í—ñ–¥–º—ñ–Ω–∏—Ç–∏ ‚ùå"

films_text = "–§—ñ–ª—å–º–∏ üé¨"
gachi_text = "–ì–∞—á—ñ üî•"
memes_text = "–ú–µ–º–∏ üåö"
nani_text = "–ù—è—à–Ω—ñ ü•∞"
theme_mass = {films_text: "films", gachi_text: "gachi", memes_text: "memes", nani_text: "nani"}

Yes_text = "–¢–∞–∫ ‚úÖ"
No_text = "–ù—ñ ‚ùå"

continue_text = "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏"

s_phone_text = "–ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É ‚òéÔ∏è"
s_username_text = "–ø–æ @username ‚ú®"
s_none_text = "–Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ ‚ùå"

ban_text = "–í–∏ –∑–∞–±–∞–Ω–µ–Ω—ñ –≤ –±–æ—Ç—ñ! ‚ùå"

start_text = "–ü—Ä–∏–≤—ñ—Ç, —Ü–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É‚ù§Ô∏è, –æ–±–µ—Ä—ñ—Ç—å —Ñ–æ–Ω –¥–ª—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏"
cance_compleate_text = "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–æ ‚ùå, —è–∫—â–æ —Ö–æ—á–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –∑–∞–Ω–æ–≤–æ, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start"
incorect_theme = "–¶—ñ—î—ó —Ç–µ–º–∏ –Ω–µ–º–∞—î –≤ –º–µ–Ω—é, –±—É–¥—å –ª–∞—Å–∫–∞ –æ–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –∑ –º–µ–Ω—é ü•∏"
get_num_text = "–ß—É–¥–æ–≤–æ, –æ–±–µ—Ä–∏ —Ñ–æ–Ω –¥–ª—è –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ –∑–∞ —ó—ó –Ω–æ–º–µ—Ä–æ–º üíå"
incorect_num = "–§–æ–Ω—É –∑–∞ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ–º–∞—î, –±—É–¥—å –ª–∞—Å–∫–∞ –≤–∫–∞–∂—ñ—Ç—å —ñ—Å–Ω—É—é—á–∏–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏–Ω–∫–∏ ü•∏"
get_from_text = "–ü—ñ–¥–ø–∏—à—ñ—Ç—å –°–ï–ë–ï üê∞ —è–∫ –≤–∞–º —Ö–æ—á–µ—Ç—å—Å—è –≤—ñ–¥ —Ç—Ä–µ—Ç—å–æ—ó –æ—Å–æ–±–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: —Ç–≤–æ–≥–æ –∑–∞–π—á–∏–∫–∞) –¥–æ 30 —Å–∏–º–≤–æ–ª—ñ–≤"
get_for_text = "–ü—ñ–¥–ø–∏—à—ñ—Ç—å –û–î–ï–†–ñ–£–í–ê–ß–ê üê∞ —è–∫ –≤–∞–º —Ö–æ—á–µ—Ç—å—Å—è –≤—ñ–¥ —Ç—Ä–µ—Ç—å–æ—ó –æ—Å–æ–±–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: —Ç–≤–æ–≥–æ –∑–∞–π—á–∏–∫–∞) –¥–æ 30 —Å–∏–º–≤–æ–ª—ñ–≤"
incorect_text = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–æ —Ç–µ–∫—Å—Ç"
get_caption_text = "–ó–∞ –±–∞–∂–∞–Ω–Ω—è–º, –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è , —è–∫ –ø—ñ–¥–ø–∏—Å –¥–æ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ üíå (–¥–æ 2.000 —Å–∏–º–≤–æ–ª—ñ–≤)"
view_photo_text = "–í–∞—à–∞ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞üíå:"
get_send_ways = "–í–∏–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –≤—ñ–¥–ø—Ä–∞–≤–∫–∏üìï"
compleate_text = """–í–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞ —É—Å–ø—ñ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞. 
–°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è –±–æ—Ç –¥–æ–ø–æ–º—ñ–≥ –≤–∞–º —Ç–∞ –≤–∞—à—ñ–π —Å–∏–º–ø–∞—Ç—ñ—ó –ø—Ä–∏–∫—Ä–∞—Å–∏—Ç–∏ —Ü–µ–π –¥–µ–Ω—åü•∞

–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —â–µ, –Ω–∞—Ç–∏—Å–Ω—ñ—Å—Ç—å /start üòá"""
incorect_way = "–í–∏–±–µ—Ä—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–æ —Å–ø–æ—Å—ñ–± –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ ü•∏"
get_phone_text = "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ (+380XXXXXXXXX) ‚òéÔ∏è"
get_username_text = "–í–≤–µ–¥—ñ—Ç—å @username –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ ‚ú®"
error_text = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ü—å–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É, —Å–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —â–µ —Ä–∞–∑ ü•∏"
go_send_text = "–ë—ñ–∂—É –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É üïäüíå"

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ñ–¥–º—ñ–Ω–∏
markup_cance = types.ReplyKeyboardMarkup()
cance_button = types.KeyboardButton(cance_text)
markup_cance = markup_cance.row(cance_button)

# –ü—É—Å—Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó
del_markup = types.ReplyKeyboardRemove()

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É —à–∞–±–ª–æ–Ω—É 1-7
num_mass = ["1", "2", "3", "4", "5", "6", "7"]
num_markup = types.ReplyKeyboardMarkup()
num_markup = num_markup.row(types.KeyboardButton("1"),
                            types.KeyboardButton("2"),
                            types.KeyboardButton("3"))
num_markup = num_markup.row(types.KeyboardButton("4"),
                            types.KeyboardButton("5"),
                            types.KeyboardButton("6"))
num_markup = num_markup.row(types.KeyboardButton("7"),
                            cance_button)

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É —Ç–µ–º–∏
theme_markup = types.ReplyKeyboardMarkup()
films_button = types.KeyboardButton(films_text)
gachi_button = types.KeyboardButton(gachi_text)
memes_button = types.KeyboardButton(memes_text)
nani_button = types.KeyboardButton(nani_text)
theme_markup = theme_markup.row(films_button, gachi_button)
theme_markup = theme_markup.row(memes_button, nani_button)
theme_markup = theme_markup.row(cance_button)

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
tf_markup = types.ReplyKeyboardMarkup()
tf_markup = tf_markup.row(types.KeyboardButton(Yes_text),
                          types.KeyboardButton(No_text))

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—ñ–¥–ø–∏—Å—É –ø—ñ–¥ –∫–∞—Ä—Ç–∏–Ω–∫—É
caption_markup = types.ReplyKeyboardMarkup()
caption_markup = caption_markup.row(types.KeyboardButton(continue_text),
                                    cance_button)

# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–∏–±–æ—Ä—É —Å–ø–æ—Å–æ–±—É –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
s_phone_button = types.KeyboardButton(s_phone_text)
s_username_button = types.KeyboardButton(s_username_text)
s_none_button = types.KeyboardButton(s_none_text)
way_markup = types.ReplyKeyboardMarkup()
way_markup = way_markup.row(s_phone_button).row(s_username_button).row(s_none_button)


# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞, –ø—Ä–æ–ø–æ–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –≤–∏–±—Ä–∞—Ç–∏ —Ç–µ–º—É –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏
@bot.message_handler(commands=['start'])
def start(message):
    if settings.WHITE_LIST_BOOL:
        log_deb(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.username} –∞–±–æ –∂ {message.from_user.id} –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥—É /start")
        if message.from_user.id in settings.WHITE_LIST:
            bot.send_message(message.chat.id, start_text,
                             reply_markup=theme_markup)
            bot.register_next_step_handler(message, get_theme)
        else:
            log_inf(
                f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.username} –∞–±–æ –∂ {message.from_user.id} –Ω–µ –æ—Ç—Ä–∏–º–∞–≤ –¥–æ—Å—Ç—É–ø —Ç–∞–∫ —è–∫ –∑–∞–±–∞–Ω–µ–Ω–∏–π")
            bot.send_message(message.chat.id, ban_text, reply_markup=del_markup)
    else:
        log_deb(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.username} –∞–±–æ –∂ {message.from_user.id} –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥—É /start")
        if message.from_user.id not in settings.BAN_LIST:
            bot.send_message(message.chat.id, start_text,
                             reply_markup=theme_markup)
            bot.register_next_step_handler(message, get_theme)
        else:
            log_inf(
                f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.username} –∞–±–æ –∂ {message.from_user.id} –Ω–µ –æ—Ç—Ä–∏–º–∞–≤ –¥–æ—Å—Ç—É–ø —Ç–∞–∫ —è–∫ –∑–∞–±–∞–Ω–µ–Ω–∏–π")
            bot.send_message(message.chat.id, ban_text, reply_markup=del_markup)


# –í–∏–±—ñ—Ä —Ç–µ–º–∏, –ø—Ä–æ–ø–æ–Ω—É—î –≤–∏–±—Ä–∞—Ç–∏ –Ω–æ–º–µ—Ä —à–∞–±–ª–æ–Ω—É –∫–æ—Ç–æ—Ä–∏–π —Ü—ñ–∫–∞–≤–∏—Ç—å
def get_theme(message):
    if message.text != cance_text:
        if message.text in theme_mass:
            theme = theme_mass[message.text]
            img = open(f"templates/menu/{theme}.png", 'rb')
            bot.send_photo(message.chat.id, photo=img, caption=get_num_text,
                           reply_markup=num_markup)
            bot.register_next_step_handler(message, get_num, theme)
        else:
            bot.send_message(message.chat.id, incorect_theme,
                             reply_markup=theme_markup)
            bot.register_next_step_handler(message, get_theme)
    else:
        bot.send_message(message.chat.id, cance_compleate_text, reply_markup=del_markup)


# –í–∏–±—ñ—Ä –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç–∏–Ω–∫–∏, –ø—Ä–æ–ø–æ–Ω—É—î –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤—ñ–¥ –∫–æ–≥–æ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞
def get_num(message, theme):
    if message.text != cance_text:
        if message.text in num_mass:
            number = message.text
            bot.send_message(message.chat.id, get_from_text,
                             reply_markup=markup_cance)
            bot.register_next_step_handler(message, get_from_user, theme, number)
        else:
            bot.send_message(message.chat.id, incorect_num,
                             reply_markup=num_markup)
            bot.register_next_step_handler(message, get_num, theme)
    else:
        bot.send_message(message.chat.id, cance_compleate_text, reply_markup=del_markup)


# –í–≤—ñ–¥ –≤—ñ–¥ –∫–æ–≥–æ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞, –ø—Ä–æ–ø–æ–Ω—É—î –Ω–∞–ø–∏—Å–∞—Ç–∏ –∫–æ–º—É –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞
def get_from_user(message, theme, number):
    if message.text != cance_text:
        try:
            if len(message.text) != 0 and len(message.text) <= 30:
                from_user = message.text
                bot.send_message(message.chat.id, get_for_text,
                                 reply_markup=markup_cance)
                bot.register_next_step_handler(message, get_for_user, theme, number, from_user)
            else:
                bot.send_message(message.chat.id, incorect_text,
                                 reply_markup=markup_cance)
                bot.register_next_step_handler(message, get_from_user, theme, number)
        except:
            log_deb(f"{message.from_user.id} –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —â–æ—Å—å –∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É!")
            bot.send_message(message.chat.id, incorect_text,
                             reply_markup=markup_cance)
            bot.register_next_step_handler(message, get_from_user, theme, number)
    else:
        bot.send_message(message.chat.id, cance_compleate_text, reply_markup=del_markup)


# –í–≤—ñ–¥ –¥–ª—è –∫–æ–≥–æ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞, –ø—Ä–æ–ø–æ–Ω—É—î –ø–æ –±–∞–∂–∞–Ω–Ω—é –≤–≤–µ—Å—Ç–∏ –ø—ñ–¥–ø–∏—Å –ø—ñ–¥ –∫–∞—Ä—Ç–∏–Ω–∫—É
def get_for_user(message, theme, number, from_user):
    if message.text != cance_text:
        try:
            if len(message.text) != 0 and len(message.text) <= 30:
                for_user = message.text
                bot.send_message(message.chat.id, get_caption_text,
                                 reply_markup=caption_markup)
                bot.register_next_step_handler(message, get_caption, theme, number, from_user, for_user)
            else:
                bot.send_message(message.chat.id, incorect_text,
                                 reply_markup=markup_cance)
                bot.register_next_step_handler(message, get_for_user, theme, number, from_user)
        except:
            log_deb(f"{message.from_user.id} –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —â–æ—Å—å –∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É!")
            bot.send_message(message.chat.id, incorect_text,
                             reply_markup=markup_cance)
            bot.register_next_step_handler(message, get_for_user, theme, number, from_user)
    else:
        bot.send_message(message.chat.id, cance_compleate_text, reply_markup=del_markup)


# –í–≤—ñ–¥ –ø—ñ–¥–ø–∏—Å—É –ø—ñ–¥ –∫–∞—Ä—Ç–∏–Ω–∫—É, –≤–∏–≤–æ–¥–∏—Ç—å —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω—É –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É
def get_caption(message, theme, number, from_user, for_user):
    if message.text != cance_text:
        try:
            if len(message.text) == 0 or message.text == continue_text or len(message.text) > 2000:
                caption = ""
            else:
                caption = message.text
            image = f"templates/{theme}/{number}.jpg"
            image_name = photos_4.get_image(image, for_user, from_user)
            bot.send_message(message.chat.id, view_photo_text)
            log_deb(f"{message.from_user.id} —Å—Ç–≤–æ—Ä–∏–≤ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É {image_name}")
            img = open(image_name, 'rb')
            bot.send_photo(message.chat.id, photo=img, caption=caption)
            bot.send_message(message.chat.id, get_send_ways, reply_markup=way_markup)
            bot.register_next_step_handler(message, get_way, image_name, caption)
        except:
            log_deb(f"{message.from_user.id} –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —â–æ—Å—å –∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É!")
            caption = message.text
            image = f"templates/{theme}/{number}.jpg"
            image_name = photos_4.get_image(image, for_user, from_user)
            bot.send_message(message.chat.id, view_photo_text)
            log_deb(f"{message.from_user.id} —Å—Ç–≤–æ—Ä–∏–≤ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É {image_name}")
            img = open(image_name, 'rb')
            bot.send_photo(message.chat.id, photo=img, caption=caption)
            bot.send_message(message.chat.id, get_send_ways, reply_markup=way_markup)
            bot.register_next_step_handler(message, get_way, image_name, caption)
    else:
        bot.send_message(message.chat.id, cance_compleate_text, reply_markup=del_markup)


# –í–∏–±—ñ—Ä —Å–ø–æ—Å–æ–±—É –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
def get_way(message, image_name, caption):
    if message.text != s_none_text:
        if message.text == s_phone_text:
            bot.send_message(message.chat.id, get_phone_text,
                             reply_markup=markup_cance)
            bot.register_next_step_handler(message, get_phone_num, image_name, caption)
        elif message.text == s_username_text:
            bot.send_message(message.chat.id, get_username_text,
                             reply_markup=markup_cance)
            bot.register_next_step_handler(message, get_username, image_name, caption)
        else:
            bot.send_message(message.chat.id, incorect_way, reply_markup=way_markup)
            bot.register_next_step_handler(message, get_way, image_name, caption)
    else:
        bot.send_message(message.chat.id, compleate_text, reply_markup=del_markup)


# –ü—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É, –≤–≤–µ–¥–µ–Ω—è –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
def get_phone_num(message, image_name, caption):
    if message.text != cance_text:
        phone_num = message.text
        log_deb(f"{message.from_user.id} –≤–≤—ñ–≤ –Ω–æ–º–µ—Ä {phone_num}")
        try:
            bot.send_message(message.chat.id, go_send_text)
            send.sender_phone(user_phone=phone_num, valentine=image_name, caption=caption)
            bot.send_message(message.chat.id, compleate_text, reply_markup=del_markup)
            log_deb(f"{phone_num} –æ—Ç—Ä–∏–º–∞–≤ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É")
        except Exception as ex:
            print(ex)
            log_err(f"{phone_num} –Ω–µ –∑–º—ñ–≥ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É")
            bot.send_message(message.chat.id, error_text, reply_markup=markup_cance)
            bot.register_next_step_handler(message, get_phone_num, image_name, caption)
    else:
        bot.send_message(message.chat.id, cance_compleate_text, reply_markup=del_markup)


# –ü—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É, –≤–≤–µ–¥–µ–Ω–Ω—è —é–∑–µ—Ä–Ω–µ–π–º—É
def get_username(message, image_name, caption):
    if message.text != cance_text:
        username = message.text
        log_deb(f"{message.from_user.id} –≤–≤—ñ–≤ —é–∑–µ—Ä–Ω–µ–π–º {username}")
        try:
            bot.send_message(message.chat.id, go_send_text)
            send.sender(user_for=username, valentine=image_name, caption=caption)
            bot.send_message(message.chat.id, compleate_text, reply_markup=del_markup)
            log_deb(f"{username} –æ—Ç—Ä–∏–º–∞–≤ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É")
        except Exception as ex:
            print(ex)
            log_err(f"{username} –Ω–µ –∑–º—ñ–≥ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É")
            bot.send_message(message.chat.id, error_text, reply_markup=markup_cance)
            bot.register_next_step_handler(message, get_username, image_name, caption)
    else:
        bot.send_message(message.chat.id, cance_compleate_text, reply_markup=del_markup)


if __name__ == "__main__":
    while True:
        try:
            log_inf("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")
            bot.polling(none_stop=True)
        except Exception as ex:
            log_err("–ú–ï–ì–ê –§–ê–¢–ê–õ–¨–ù–ê –ü–û–ú–ò–õ–ö–ê, –ë–û–¢ –£–ü–ê–í, –ë–û–¢ –£–ü–ê–í")
            print(ex)
